/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Options } from "masonry-layout";
export namespace Components {
    interface LanMasonry {
        "appended": (element: HTMLElement) => Promise<void>;
        "destroy": () => Promise<void>;
        "getItemElements": () => Promise<any>;
        "layout": () => Promise<void>;
        "masonry": () => Promise<void>;
        "options": Options;
        "reloadItems": () => Promise<void>;
        "rm": (element: HTMLElement) => Promise<void>;
        "useImagesLoaded": boolean;
    }
    interface LanMasonryItem {
        "add": (el: HTMLElement) => void;
        "layout": () => void;
        "rm": (el: HTMLElement) => void;
        "size"?: string;
        "sizeLg"?: string;
        "sizeMd"?: string;
        "sizeSm"?: string;
        "sizeXl"?: string;
        "sizeXs"?: string;
    }
}
export interface LanMasonryCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLanMasonryElement;
}
declare global {
    interface HTMLLanMasonryElement extends Components.LanMasonry, HTMLStencilElement {
    }
    var HTMLLanMasonryElement: {
        prototype: HTMLLanMasonryElement;
        new (): HTMLLanMasonryElement;
    };
    interface HTMLLanMasonryItemElement extends Components.LanMasonryItem, HTMLStencilElement {
    }
    var HTMLLanMasonryItemElement: {
        prototype: HTMLLanMasonryItemElement;
        new (): HTMLLanMasonryItemElement;
    };
    interface HTMLElementTagNameMap {
        "lan-masonry": HTMLLanMasonryElement;
        "lan-masonry-item": HTMLLanMasonryItemElement;
    }
}
declare namespace LocalJSX {
    interface LanMasonry {
        "onLayoutComplete"?: (event: LanMasonryCustomEvent<any>) => void;
        "onRemoveComplete"?: (event: LanMasonryCustomEvent<any>) => void;
        "options"?: Options;
        "useImagesLoaded"?: boolean;
    }
    interface LanMasonryItem {
        "add"?: (el: HTMLElement) => void;
        "layout"?: () => void;
        "rm"?: (el: HTMLElement) => void;
        "size"?: string;
        "sizeLg"?: string;
        "sizeMd"?: string;
        "sizeSm"?: string;
        "sizeXl"?: string;
        "sizeXs"?: string;
    }
    interface IntrinsicElements {
        "lan-masonry": LanMasonry;
        "lan-masonry-item": LanMasonryItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "lan-masonry": LocalJSX.LanMasonry & JSXBase.HTMLAttributes<HTMLLanMasonryElement>;
            "lan-masonry-item": LocalJSX.LanMasonryItem & JSXBase.HTMLAttributes<HTMLLanMasonryItemElement>;
        }
    }
}
